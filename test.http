# file for testing API with VSCode extension `REST Client` by **Huachao Mao**
#     https://marketplace.visualstudio.com/items?itemName=humao.rest-client
# tutorial found on Medium:
#     https://medium.com/lseg-developer-community/how-to-test-rest-api-with-visual-studio-code-rest-client-extensions-9f2e061d0299

@hostname = localhost
@PORT = 3000
@baseUrl = http://{{hostname}}:{{PORT}}
@api = api
@vers = v1

###

GET {{baseUrl}}/

###

POST {{baseUrl}}/

### get all tours

GET {{baseUrl}}/{{api}}/{{vers}}/tours

### filter tours with QUERY

GET {{baseUrl}}/{{api}}/{{vers}}/tours?duration=5&difficulty=easy

### filter tours with QUERY and FILTERING

GET {{baseUrl}}/{{api}}/{{vers}}/tours?duration=5&difficulty=easy&page=2&sort=1&limit=10

### filter tours with QUERY and FILTERING and OPERATORS

GET {{baseUrl}}/{{api}}/{{vers}}/tours?duration[gte]=5&difficulty=easy

### filter tours with QUERY and FILTERING and OPERATORS #2

GET {{baseUrl}}/{{api}}/{{vers}}/tours?duration[gte]=5&difficulty=easy&price[lte]=1500

### filter tours with QUERY and SORTING

GET {{baseUrl}}/{{api}}/{{vers}}/tours?sort=price

### filter tours with QUERY and SORTING #2

GET {{baseUrl}}/{{api}}/{{vers}}/tours?sort=-price

### filter tours with QUERY and MULTIPLE-FIELD SORTING #3

GET {{baseUrl}}/{{api}}/{{vers}}/tours?sort=-price,ratingsAverage

### filter tours with QUERY and FIELD LIMIT

GET {{baseUrl}}/{{api}}/{{vers}}/tours?fields=name,duration

### filter tours with QUERY and FIELD LIMIT #2

GET {{baseUrl}}/{{api}}/{{vers}}/tours?fields=-name,-duration

### filter tours with QUERY and PAGINATION

GET {{baseUrl}}/{{api}}/{{vers}}/tours?page=2&limit=2

### filter tours with QUERY and PAGINATION #2
## AKA we have few Documents (5 pages with limit of 2), WHAT IF we exceed them?

GET {{baseUrl}}/{{api}}/{{vers}}/tours?page=6&limit=2

### filter tours with QUERY and PAGINATION #2
## AKA we have few Documents (5 pages with limit of 2), WHAT IF reach last one?

GET {{baseUrl}}/{{api}}/{{vers}}/tours?page=5&limit=2

### filter tours with QUERY and WITHOUT ALIAS

GET {{baseUrl}}/{{api}}/{{vers}}/tours?limit=5&sort=-ratingsAverage,price

### filter tours with QUERY and WITH ALIAS

GET {{baseUrl}}/{{api}}/{{vers}}/tours/top-5-cheap

### get tours stats

GET {{baseUrl}}/{{api}}/{{vers}}/tours/tour-stats

### get monthly plans by year

GET {{baseUrl}}/{{api}}/{{vers}}/tours/monthly-plan/2021

### get specific tour by id

GET {{baseUrl}}/{{api}}/{{vers}}/tours/5

### get specific tour by _id MONGO

GET {{baseUrl}}/{{api}}/{{vers}}/tours/663b3a6f227bea0b9dee407f

### get specific tour by id NOT FOUND, invalid

GET {{baseUrl}}/{{api}}/{{vers}}/tours/555

### get specific tour by _id MONGO, valid, but NOT FOUND

GET {{baseUrl}}/{{api}}/{{vers}}/tours/663403e65bed1a47ae000000

### create new tour

POST {{baseUrl}}/{{api}}/{{vers}}/tours
Content-Type: application/json

{
  "name": "Test tour",
  "duration": 10,
  "difficulty": "easy",
  "price": 400
}

### create new tour WITH MONGO and FULL SCHEMA

POST {{baseUrl}}/{{api}}/{{vers}}/tours
Content-Type: application/json

{
  "name": "The Forest Hiker",
  "duration": 5,
  "maxGroupSize": 25,
  "difficulty": "easy",
  "ratingsAverage": 4.7,
  "ratingsQuantity": 37,
  "price": 397,
  "summary": "Breathtaking hike through the Canadian Banff National Park",
  "description": "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
  "imageCover": "tour-1-cover.jpg",
  "images": ["tour-1-1.jpg", "tour-1-2.jpg", "tour-1-3.jpg"],
  "startDates": ["2021-04-25,10:00", "2021-07-20,10:00", "2021-10-05,10:00"]
}

### create new tour SECRET TOUR

POST {{baseUrl}}/{{api}}/{{vers}}/tours
Content-Type: application/json

{
  "name": "Super Secret tour",
  "duration": 10,
  "maxGroupSize": 25,
  "difficulty": "easy",
  "price": 397,
  "summary": "Testing Secret Tour to Jurassic Park",
  "imageCover": "tour-1-cover.jpg",
  "secretTour": true
}

### find tour with SECRET ID

GET {{baseUrl}}/{{api}}/{{vers}}/tours/663a3d3a54ac03c6dc161ee6

### create tour with a NAME TOO SHORT

POST {{baseUrl}}/{{api}}/{{vers}}/tours/
Content-Type: application/json

{
  "name": "Tour",
  "duration": 10,
  "maxGroupSize": 25,
  "difficulty": "easy",
  "price": 397,
  "summary": "Testing short name Tour",
  "imageCover": "tour-1-cover.jpg"
}

### create tour with a NAME TOO LONG

POST {{baseUrl}}/{{api}}/{{vers}}/tours/
Content-Type: application/json

{
  "name": "Tour to the famous long Eyjafjallajokull, longest name for a volcano",
  "duration": 10,
  "maxGroupSize": 25,
  "difficulty": "easy",
  "price": 397,
  "summary": "Testing long name Tour",
  "imageCover": "tour-1-cover.jpg"

}

### create tour with a RATING TOO LOW

POST {{baseUrl}}/{{api}}/{{vers}}/tours/
Content-Type: application/json

{
  "name": "Worst Tour Ever",
  "duration": 1000,
  "maxGroupSize": 25,
  "difficulty": "easy",
  "price": 3097,
  "summary": "Testing lowest rating Tour",
  "imageCover": "tour-1-cover.jpg",
  "ratingsAverage": 0
}

### create tour with a RATING TOO HIGH

POST {{baseUrl}}/{{api}}/{{vers}}/tours/
Content-Type: application/json

{
  "name": "Best Tour Ever",
  "duration": 10,
  "maxGroupSize": 25,
  "difficulty": "easy",
  "price": 397,
  "summary": "Testing highest rating Tour",
  "imageCover": "tour-1-cover.jpg",
  "ratingsAverage": 6
}

### create tour with a WRONG DIFFICULTY

POST {{baseUrl}}/{{api}}/{{vers}}/tours/
Content-Type: application/json

{
  "name": "Test Expert Tour",
  "duration": 10,
  "maxGroupSize": 25,
  "difficulty": "EXPERT",
  "price": 397,
  "summary": "Testing Expert Tour",
  "imageCover": "tour-1-cover.jpg"
}

### create new tour WITHOUT PRICE

POST {{baseUrl}}/{{api}}/{{vers}}/tours
Content-Type: application/json

{
  "name": "Test tour",
  "duration": 10,
  "maxGroupSize": 25,
  "difficulty": "easy",
  "price": 397,
  "summary": "Testing Tour hike through the TestSton National Park",
  "imageCover": "tour-1-cover.jpg"
}

### create new tour WITH DISCOUNT > PRICE

POST {{baseUrl}}/{{api}}/{{vers}}/tours
Content-Type: application/json

{
  "name": "Test tour Price gt",
  "duration": 10,
  "maxGroupSize": 25,
  "difficulty": "easy",
  "price": 397,
  "summary": "Testing Tour priceDiscounted greater than price",
  "imageCover": "tour-1-cover.jpg",
  "priceDiscount": 400
}

### create new tour WITH DISCOUNT < PRICE

POST {{baseUrl}}/{{api}}/{{vers}}/tours
Content-Type: application/json

{
  "name": "Test tour Price lt",
  "duration": 10,
  "maxGroupSize": 25,
  "difficulty": "easy",
  "price": 397,
  "summary": "Testing Tour priceDiscounted less than price",
  "imageCover": "tour-1-cover.jpg",
  "priceDiscount": 300
}

# ### create new tour WITH JUST ALPHABETIC NAME

# POST {{baseUrl}}/{{api}}/{{vers}}/tours
# Content-Type: application/json

# {
#   "name": "Test tour 420",
#   "duration": 10,
#   "maxGroupSize": 25,
#   "difficulty": "easy",
#   "price": 397,
#   "summary": "Testing Tour with must contain just alphabet",
#   "imageCover": "tour-1-cover.jpg"
# }

### update a tour field

PATCH {{baseUrl}}/{{api}}/{{vers}}/tours/3
Content-Type: application/json

{
  "duration": 5
}

### update a tour field WITH MONGO

PATCH {{baseUrl}}/{{api}}/{{vers}}/tours/663403e65bed1a47a6b747fc
Content-Type: application/json

{
  "price": 500
}

### update a tour field WITH MONGO and a STRING

PATCH {{baseUrl}}/{{api}}/{{vers}}/tours/663403e65bed1a47a6b747fc
Content-Type: application/json

{
  "price": "some price"
}

### update specific field of invalid ID, NOT FOUND

PATCH {{baseUrl}}/{{api}}/{{vers}}/tours/555
Content-Type: application/json

{
  "duration": 5
}

### update specific field a NAME TOO SHORT

PATCH {{baseUrl}}/{{api}}/{{vers}}/tours/663503fe924af83fcb9275c4
Content-Type: application/json

{
  "name": "Tour"
}

### update specific field a NAME TOO LONG

PATCH {{baseUrl}}/{{api}}/{{vers}}/tours/663503fe924af83fcb9275c4
Content-Type: application/json

{
  "name": "Tour to the famous long Eyjafjallajokull, longest name for a volcano"
}

### update several fields not passing VALIDATION

PATCH {{baseUrl}}/{{api}}/{{vers}}/tours/663503fe924af83fcb9275c4
Content-Type: application/json

{
  "name": "Tour to the famous long Eyjafjallajokull, longest name for a volcano",
  "ratingsAverage": 6,
  "difficulty": "whatever"
}

### delete a tour

DELETE {{baseUrl}}/{{api}}/{{vers}}/tours/

### delete a tour WITH MONGO

DELETE {{baseUrl}}/{{api}}/{{vers}}/tours/663403e65bed1a47a6b747fc

### delete a tour of invalid ID, NOT FOUND

DELETE {{baseUrl}}/{{api}}/{{vers}}/tours/555

### get NOT FOUND route #1

GET {{baseUrl}}/{{api}}/tours

### get NOT FOUND route #2

GET {{baseUrl}}/{{api}}/{{vers}}/tours/querty

### get all users

GET {{baseUrl}}/{{api}}/{{vers}}/users

### create new user

POST {{baseUrl}}/{{api}}/{{vers}}/users/signup
Content-Type: application/json

{
  "name": "alberto",
  "email": "mia2@personale.it",
  "photo": "🤪",
  "password": "12345678",
  "passwordConfirm": "12345678"
}

### create new user, photo NOT REQUIRED

POST {{baseUrl}}/{{api}}/{{vers}}/users/signup
Content-Type: application/json

{
  "name": "jonas",
  "email": "hello@jonas.io",
  "password": "12345678",
  "passwordConfirm": "12345678"
}

### create new user, NOT MATCHING PASSWORD

POST {{baseUrl}}/{{api}}/{{vers}}/users/signup
Content-Type: application/json

{
  "name": "pippo",
  "email": "pinco@panco.io",
  "password": "12345678",
  "passwordConfirm": "87654321"
}

### create new user, untrimmed inputs

POST {{baseUrl}}/{{api}}/{{vers}}/users/signup
Content-Type: application/json

{
  "name": " funko ",
  "email": "  funko@pop.uk ",
  "photo": "🤖",
  "password": " 12345678  ",
  "passwordConfirm": "  12345678  "
}

### create new user, short password

POST {{baseUrl}}/{{api}}/{{vers}}/users/signup
Content-Type: application/json

{
  "name": "alice",
  "email": "alice@ization.sao",
  "photo": "👱‍♀️",
  "password": "123456",
  "passwordConfirm": "123456"
}

### create new user, INVALID EMAIL

POST {{baseUrl}}/{{api}}/{{vers}}/users/signup
Content-Type: application/json

{
  "name": "super",
  "email": "super@user",
  "photo": "🦸🏻‍♂️",
  "password": "sudosudo",
  "passwordConfirm": "sudosudo"
}

### post to login an valid user

POST {{baseUrl}}/{{api}}/{{vers}}/users/login
Content-Type: application/json

{
  "password": "12345678",
  "email": "mia@personale.it"
}

### post to login WITH WRONG PASSWORD

POST {{baseUrl}}/{{api}}/{{vers}}/users/login
Content-Type: application/json

{
  "password": "12345678888",
  "email": "mia@personale.it"
}


### post to login WITHOUT PASSWORD

POST {{baseUrl}}/{{api}}/{{vers}}/users/login
Content-Type: application/json

{
  "email": "mia@personale.it"
}

